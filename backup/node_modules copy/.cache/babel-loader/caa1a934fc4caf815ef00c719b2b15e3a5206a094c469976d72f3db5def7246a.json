{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigocandi/solar-simulator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Optional: for additional styling\n\n// System parameters\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_LOAD = 1.0; // kW - House base load\nconst SOLAR_GEN = 5.0; // kW - Constant solar generation\nconst BATTERY_MAX_SUPPLY = 5.0; // kW - Maximum battery discharge\n\n// Appliance loads in kW\nconst APPLIANCE_LOADS = {\n  Fridge: 0.1,\n  TV: 0.1,\n  Oven: 2.0,\n  Aircon: 1.5\n};\nfunction App() {\n  _s();\n  const [batteryOn, setBatteryOn] = useState(true);\n  const [appliances, setAppliances] = useState({\n    Fridge: false,\n    TV: false,\n    Oven: false,\n    Aircon: false\n  });\n\n  // Toggle battery on/off\n  const handleBatteryChange = () => {\n    setBatteryOn(prev => !prev);\n  };\n\n  // Toggle appliance state on/off\n  const handleApplianceChange = applianceName => {\n    setAppliances(prevState => ({\n      ...prevState,\n      [applianceName]: !prevState[applianceName]\n    }));\n  };\n\n  // Simulation function\n  const simulateHouse = () => {\n    // Calculate total appliance load\n    let totalApplianceLoad = Object.keys(appliances).reduce((sum, appliance) => {\n      return appliances[appliance] ? sum + APPLIANCE_LOADS[appliance] : sum;\n    }, 0);\n    const totalLoad = BASE_LOAD + totalApplianceLoad;\n    let gridConsumption = 0;\n    if (batteryOn) {\n      const deficit = totalLoad - SOLAR_GEN;\n      if (deficit > 0) {\n        // Battery covers part of the deficit (up to its max)\n        const batteryCover = Math.min(deficit, BATTERY_MAX_SUPPLY);\n        gridConsumption = deficit - batteryCover;\n      }\n    } else {\n      gridConsumption = Math.max(0, totalLoad - SOLAR_GEN);\n    }\n    return {\n      totalLoad,\n      gridConsumption\n    };\n  };\n  const {\n    totalLoad,\n    gridConsumption\n  } = simulateHouse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Solar + Battery House Simulation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: batteryOn,\n          onChange: handleBatteryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), \"With Battery\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Appliance Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), Object.keys(APPLIANCE_LOADS).map(applianceName => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: appliances[applianceName],\n          onChange: () => handleApplianceChange(applianceName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), applianceName, \" (\", APPLIANCE_LOADS[applianceName], \" kW)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, applianceName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simulation Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Load: \", totalLoad.toFixed(2), \" kW\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Grid Consumption: \", gridConsumption.toFixed(2), \" kW\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4VQQ/dK5NC957Mb2iSJfRqAl33o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BASE_LOAD","SOLAR_GEN","BATTERY_MAX_SUPPLY","APPLIANCE_LOADS","Fridge","TV","Oven","Aircon","App","_s","batteryOn","setBatteryOn","appliances","setAppliances","handleBatteryChange","prev","handleApplianceChange","applianceName","prevState","simulateHouse","totalApplianceLoad","Object","keys","reduce","sum","appliance","totalLoad","gridConsumption","deficit","batteryCover","Math","min","max","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","toFixed","_c","$RefreshReg$"],"sources":["/Users/rodrigocandi/solar-simulator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // Optional: for additional styling\n\n// System parameters\nconst BASE_LOAD = 1.0; // kW - House base load\nconst SOLAR_GEN = 5.0; // kW - Constant solar generation\nconst BATTERY_MAX_SUPPLY = 5.0; // kW - Maximum battery discharge\n\n// Appliance loads in kW\nconst APPLIANCE_LOADS = {\n  Fridge: 0.1,\n  TV: 0.1,\n  Oven: 2.0,\n  Aircon: 1.5,\n};\n\nfunction App() {\n  const [batteryOn, setBatteryOn] = useState(true);\n  const [appliances, setAppliances] = useState({\n    Fridge: false,\n    TV: false,\n    Oven: false,\n    Aircon: false,\n  });\n\n  // Toggle battery on/off\n  const handleBatteryChange = () => {\n    setBatteryOn(prev => !prev);\n  };\n\n  // Toggle appliance state on/off\n  const handleApplianceChange = (applianceName) => {\n    setAppliances(prevState => ({\n      ...prevState,\n      [applianceName]: !prevState[applianceName],\n    }));\n  };\n\n  // Simulation function\n  const simulateHouse = () => {\n    // Calculate total appliance load\n    let totalApplianceLoad = Object.keys(appliances).reduce((sum, appliance) => {\n      return appliances[appliance] ? sum + APPLIANCE_LOADS[appliance] : sum;\n    }, 0);\n\n    const totalLoad = BASE_LOAD + totalApplianceLoad;\n    let gridConsumption = 0;\n\n    if (batteryOn) {\n      const deficit = totalLoad - SOLAR_GEN;\n      if (deficit > 0) {\n        // Battery covers part of the deficit (up to its max)\n        const batteryCover = Math.min(deficit, BATTERY_MAX_SUPPLY);\n        gridConsumption = deficit - batteryCover;\n      }\n    } else {\n      gridConsumption = Math.max(0, totalLoad - SOLAR_GEN);\n    }\n\n    return { totalLoad, gridConsumption };\n  };\n\n  const { totalLoad, gridConsumption } = simulateHouse();\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      <h1>Solar + Battery House Simulation</h1>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={batteryOn}\n            onChange={handleBatteryChange}\n          />\n          With Battery\n        </label>\n      </div>\n\n      <h2>Appliance Control</h2>\n      {Object.keys(APPLIANCE_LOADS).map(applianceName => (\n        <div key={applianceName}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={appliances[applianceName]}\n              onChange={() => handleApplianceChange(applianceName)}\n            />\n            {applianceName} ({APPLIANCE_LOADS[applianceName]} kW)\n          </label>\n        </div>\n      ))}\n\n      <h2>Simulation Results</h2>\n      <p>Total Load: {totalLoad.toFixed(2)} kW</p>\n      <p>Grid Consumption: {gridConsumption.toFixed(2)} kW</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}